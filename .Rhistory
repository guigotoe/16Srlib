if (is.na(opt$counts)){stop(sprintf("There is not counts file specified"))
}else if(is.na(opt$taxonomy)){stop(sprintf("There is not taxonomy file specified"))
}else if(is.na(opt$metadata)){stop(sprintf("There is not metadata file specified"))}
if(length(grep("/$",opt$out))==0) opt$out <- paste(opt$out,"/",sep="")
data <- newMRexperiment(counts,phenoData=AnnotatedDataFrame(metadata),featureData=AnnotatedDataFrame(taxonomy))
message("Filtering...")
if(as.numeric(opt$shared)==0){shared <- 1}else{shared <- round(as.numeric(opt$shared)*NROW(pData(data)))}
data.f <- filterData(data,present=shared,depth=opt$depth)
retained.info <- sum(fData(data.f)$Size)/sum(fData(data)$Size)
message(paste(" - OTUs with less than ",opt$depth," counts and their presence in less than ",100*as.numeric(opt$shared),"% of the samples, were removed\n",
" - From ",dim(MRcounts(data))[1]," OTUs, ",dim(MRcounts(data.f))[1]," OTUs remained\n",
" - Information (Reads) retained: ",round(100*retained.info,2),"%; lost: ",round((100-100*retained.info),2),"%",sep=""))
## Normalizing
message("Normalizing...")
p.f <- cumNormStatFast(data.f) # Calculates the percentile for which to sum counts up to and scale by.
data.f <- cumNorm(data.f,p=p.f)  # Calculates each column's quantile and calculates the sum up to and including p quantile
nf.f <- normFactors(data.f)
# saving files
message("Exporting files...")
saveRDS(data.f,file=paste(opt$out,'dataF.rds',sep=''))
saveRDS(MRcounts(data.f),file=paste(opt$out,'otu_counts.rds',sep=''))
saveRDS(pData(data.f),file=paste(opt$out,'phenotype.rds',sep=''))
saveRDS(fData(data.f),file=paste(opt$out,'taxonomy.rds',sep=''))
message(" - dataF.rds -> Counts filtered and normalized - Cumulative-sum scaling normalization (Paulson et. al 2013)\n",
" ** Data was successfully prepared! **")
toolbox <- '/home/torres/Documents/Projects/Metagenome/r_scripts/16Srlib/toolbox.R'
#toolbox <- "/Users/guillermotorres/Documents/Proyectos/Doctorado/16Srlib/toolbox.R"
source(toolbox)
packages(c("metagenomeSeq","reshape2","vegan","ggplot2","optparse"))
## Options ##
p <- '/home/torres/Documents/Projects/Metagenome/r_scripts/16Srlib_test/age/'
#p <- '/Users/guillermotorres/Documents/Proyectos/Doctorado/16Srlib_test/'
option_list <- list(
make_option(c("-i","--data"),action="store",type="character",default=paste(p,'dataF.rds',sep=''),#NA,#
help="Path to input rds file"),
make_option(c("-o","--out"),action="store",type="character",default=paste(p,'beta',sep=''),#"./",#
help="Path to output directory [default %default]"),
make_option(c("-e","--exploratory"),action="store_true",default="NA",
help="Perform exploratory analysis"),
make_option(c("-m","--model"),action="store_true",default=FALSE,
help="Build constrained model based on AIC selection criterion"),
make_option(c("-am","--assess_model"),action="store",type="character",default=NA,#NULL,
help="Model's terms assessed by permutation tests; for new model: vars,separated,by,comma"),
make_option(c("-C","--constraints"),action="store",type="character",default=NA,
help="Set of constraints used by -coa: vars,separated,by,comma"),
make_option(c("-coa","--constrained_analysis"),action="store_true",default=FALSE,
help="Perform constrained ordination analysis using -C constraints"),
make_option(c("-a","--factors"),action="store",type="character",default=NULL,
help="Set of factors used by -b: vars,separated,by,comma"),
make_option(c("-b","--beta"),action="store_true",default=FALSE,
help="Perform beta diversty between -a variable classes"),
make_option(c("-f","--filter"),action="store",type="double",default=0.3,
help="Percentile as threshold of low abundant features ")
)
parser <- OptionParser(usage = "%prog -i path/to/infile -o path/to/outdir [options]",option_list=option_list)
opt <- parse_args(parser)
#parse_args(parser,positional_arguments=1)
if (is.na(opt$data)){stop(sprintf("There is not file specified"))}
if(length(grep("/$",opt$out))==0) opt$out <- paste(opt$out,"/",sep="")
#### Preparing the input data ####
data <- readRDS(opt$data)
dlog <- log2(MRcounts(data)+1)
dlogm <- sort.default(unlist(apply(dlog,1,function(x) mean(x))))
csnorm <- cumsum(dlogm)/sum(dlogm)
totrim <- names(csnorm[which(csnorm<=quantile(csnorm,probs=opt$filter))])
totrim <- match(totrim,rownames(data))
dataTrimed <- data[-totrim,]
dfc0 <- t(MRcounts(dataTrimed,norm=T))
dfc <- t(log2(MRcounts(dataTrimed,norm=T)+1))
#ptrim <- pData(dataTrimed)
#ptrim$group <- as.factor(unlist(apply(ptrim,1,function(x){
#  if (as.numeric(x[["Age"]]) <= 40) {return("G1")
#  }else if (as.numeric(x[["Age"]]) > 40 & as.numeric(x[["Age"]]) <= 60){ return("G2")
#  }else if (as.numeric(x[["Age"]]) > 60 & as.numeric(x[["Age"]]) <= 80){ return("G3")
#  }else if (as.numeric(x[["Age"]]) > 80) return("G4")
#})))
q <- pData(dataTrimed)[, !sapply(pData(dataTrimed), is.factor),drop=F]
c <- pData(dataTrimed)[, sapply(pData(dataTrimed), is.factor),drop=F]
#taxa <- fData(df)[,which(colnames(fData(df))%in%c("Phylum","Class","Order","Family"))]
#rankindex(scale(x),t(MRcounts(df,norm=T)),c("euc","man","bray","jac","kul"))
head(c)
plot(csnorm)
abline(h=quantile(csnorm,probs=opt$filter))
ca.c <- cca(dfc~group+Condition(Gender),c)
ef <- envfit(ca.c,q,permu=999)
cols <- c("steelblue", "darkred", "darkgreen","green")
plot(ca.c,xlab=paste("CA1 ",round(summary(ca.c)$concont$importance[2,1],2)),
ylab=paste("CA2 ",round(summary(ca.c)$concont$importance[2,2],2)),type="n")
with(c, points(ca.c, display = "sites", col = cols[group],pch = 16,bg=cols[group]))
with(c,ordiellipse(ca.c,group,kind="se",conf=0.95))
with(c,ordispider(ca.c,group,label=TRUE))
with(c,ordihull(ca.c,group,lty=2))
plot(ef,p.max=0.05)
ef <- envfit(ca.c,q,permu=999)
ef <- envfit(ca.c,q,permu=999,na.rm=T)
plot(ef,p.max=0.05)
head(c)
head(q)
ef <- envfit(ca.c,q[,-which("libsize")],permu=999,na.rm=T)
ef <- envfit(ca.c,q[,-which(q,"libsize")],permu=999,na.rm=T)
ef <- envfit(ca.c,q[,-which(colnames(q)=="libsize")],permu=999,na.rm=T)
plot(ca.c,xlab=paste("CA1 ",round(summary(ca.c)$concont$importance[2,1],2)),
ylab=paste("CA2 ",round(summary(ca.c)$concont$importance[2,2],2)),type="n")
with(c, points(ca.c, display = "sites", col = cols[group],pch = 16,bg=cols[group]))
with(c,ordiellipse(ca.c,group,kind="se",conf=0.95))
with(c,ordispider(ca.c,group,label=TRUE))
with(c,ordihull(ca.c,group,lty=2))
plot(ef,p.max=0.05)
ef <- envfit(ca.c,q[,-which(colnames(q)=="libsize"),drop=F],permu=999,na.rm=T)
plot(ca.c,xlab=paste("CA1 ",round(summary(ca.c)$concont$importance[2,1],2)),
ylab=paste("CA2 ",round(summary(ca.c)$concont$importance[2,2],2)),type="n")
with(c, points(ca.c, display = "sites", col = cols[group],pch = 16,bg=cols[group]))
with(c,ordiellipse(ca.c,group,kind="se",conf=0.95))
with(c,ordispider(ca.c,group,label=TRUE))
with(c,ordihull(ca.c,group,lty=2))
plot(ef,p.max=0.05)
toolbox <- '/home/torres/Documents/Projects/Metagenome/r_scripts/16Srlib/toolbox.R'
#toolbox <- "/Users/guillermotorres/Documents/Proyectos/Doctorado/16Srlib/toolbox.R"
source(toolbox)
packages(c("metagenomeSeq","reshape2","vegan","ggplot2","optparse"))
## Options ##
p <- '/home/torres/Documents/Projects/Metagenome/r_scripts/16Srlib_test/age/'
#p <- '/Users/guillermotorres/Documents/Proyectos/Doctorado/16Srlib_test/'
option_list <- list(
make_option(c("-i","--data"),action="store",type="character",default=paste(p,'dataF.rds',sep=''),#NA,#
help="Path to input rds file"),
make_option(c("-o","--out"),action="store",type="character",default=paste(p,'beta',sep=''),#"./",#
help="Path to output directory [default %default]"),
make_option(c("-e","--exploratory"),action="store_true",default="NA",
help="Perform exploratory analysis"),
make_option(c("-m","--model"),action="store_true",default=FALSE,
help="Build constrained model based on AIC selection criterion"),
make_option(c("-am","--assess_model"),action="store",type="character",default=NA,#NULL,
help="Model's terms assessed by permutation tests; for new model: vars,separated,by,comma"),
make_option(c("-C","--constraints"),action="store",type="character",default=NA,
help="Set of constraints used by -coa: vars,separated,by,comma"),
make_option(c("-coa","--constrained_analysis"),action="store_true",default=FALSE,
help="Perform constrained ordination analysis using -C constraints"),
make_option(c("-a","--factors"),action="store",type="character",default=NULL,
help="Set of factors used by -b: vars,separated,by,comma"),
make_option(c("-b","--beta"),action="store_true",default=FALSE,
help="Perform beta diversty between -a variable classes"),
make_option(c("-f","--filter"),action="store",type="double",default=0.3,
help="Percentile as threshold of low abundant features ")
)
parser <- OptionParser(usage = "%prog -i path/to/infile -o path/to/outdir [options]",option_list=option_list)
opt <- parse_args(parser)
#parse_args(parser,positional_arguments=1)
if (is.na(opt$data)){stop(sprintf("There is not file specified"))}
if(length(grep("/$",opt$out))==0) opt$out <- paste(opt$out,"/",sep="")
#### Preparing the input data ####
data <- readRDS(opt$data)
dlog <- log2(MRcounts(data)+1)
dlogm <- sort.default(unlist(apply(dlog,1,function(x) mean(x))))
csnorm <- cumsum(dlogm)/sum(dlogm)
totrim <- names(csnorm[which(csnorm<=quantile(csnorm,probs=opt$filter))])
totrim <- match(totrim,rownames(data))
dataTrimed <- data[-totrim,]
dfc0 <- t(MRcounts(dataTrimed,norm=T))
dfc <- t(log2(MRcounts(dataTrimed,norm=T)+1))
#ptrim <- pData(dataTrimed)
#ptrim$group <- as.factor(unlist(apply(ptrim,1,function(x){
#  if (as.numeric(x[["Age"]]) <= 40) {return("G1")
#  }else if (as.numeric(x[["Age"]]) > 40 & as.numeric(x[["Age"]]) <= 60){ return("G2")
#  }else if (as.numeric(x[["Age"]]) > 60 & as.numeric(x[["Age"]]) <= 80){ return("G3")
#  }else if (as.numeric(x[["Age"]]) > 80) return("G4")
#})))
q <- pData(dataTrimed)[, !sapply(pData(dataTrimed), is.factor),drop=F]
c <- pData(dataTrimed)[, sapply(pData(dataTrimed), is.factor),drop=F]
plot(csnorm)
abline(h=quantile(csnorm,probs=opt$filter))
nmds <- metaMDS(dfc,trace=F)
pdf(paste(opt$out,"e02_NMDS.pdf",sep=''),width=8, height=5)
ordiplot(nmds,type="p",display="sites")
#with(c,ordiellipse(nmds,group,kind="se",conf=0.95))
#with(c,ordispider(nmds,group,col="blue",label="T"))
#with(c,ordihull(nmds,group,col="blue",lty=2))
dev.off()
ordiplot(nmds,type="p",display="sites")
ef <- envfit(nmds,q[,-which(colnames(q)=="libsize"),permu=999)
ef <- envfit(nmds,q[,-which(colnames(q)=="libsize")],permu=999)
ca.c <- cca(dfc~group+Condition(Gender),c)
ef <- envfit(ca.c,q[,-which(colnames(q)=="libsize"),drop=F],permu=999,na.rm=T)
cols <- c("steelblue", "darkred", "darkgreen","green")
pdf(paste(opt$out,"e07_EnvCA_C.pdf",sep=''),width=8, height=5)
plot(ca.c,xlab=paste("CA1 ",round(summary(ca.c)$concont$importance[2,1],2)),
ylab=paste("CA2 ",round(summary(ca.c)$concont$importance[2,2],2)),type="n")
with(c, points(ca.c, display = "sites", col = cols[group],pch = 16,bg=cols[group]))
with(c,ordiellipse(ca.c,group,kind="se",conf=0.95))
with(c,ordispider(ca.c,group,label=TRUE))
with(c,ordihull(ca.c,group,lty=2))
plot(ef,p.max=0.05)
dev.off()
head(pData(data.f))
head(metadata)
head(duplicates(metadata$CC))
duplicates(metadata$CC)
duplicate(metadata$CC)
duplicated(metadata$CC)
tr <- metadata[duplicated(metadata$CC)]
tr <- metadata[duplicated(metadata$CC),]
techrep <- metadata[duplicated(metadata$CC),]
head(techrep)
techrep
techrep <- metadata$CC[duplicated(metadata$CC)]
techrep
which(metadata[techrep[1],rep==a])
which(metadata$CC==metadata[techrep[1]&metadata$rep=="a"])
metadata[metadata$CC==metadata[techrep[1]&metadata$rep=="a"]]
metadata[metadata$CC==metadata[techrep[1]&metadata$rep=="a"],]
metadata[metadata$CC==metadata[techrep[1]]&metadata$rep=="a",]
techrep[1]
metadata[techrep[1]]
metadata[[techrep[1]]]
techrep[1]
lenght(techrep)
length(techrep)
metadata[metadata$CC==techrep[1]]
metadata[metadata$CC==techrep[1],]
metadata[metadata$CC==techrep[1],]$ID[1]
counts[1:5,1:5]
plot(metadata[metadata$CC==techrep[1],]$ID[1],metadata[metadata$CC==techrep[1],]$ID[2])
plot(counts[,metadata[metadata$CC==techrep[1],]$ID[1]],counts[,metadata[metadata$CC==techrep[1],]$ID[2]])
plot(counts[,metadata[metadata$CC==techrep[1],]$ID[1]],counts[,metadata[metadata$CC==techrep[1],]$ID[2]],
xlim=c(0,1000),ylim=c(0,1000))
plot(MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[1]],MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[2]],
xlim=c(0,1000),ylim=c(0,1000))
plot(MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]],MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]],
xlim=c(0,1000),ylim=c(0,1000))
plot(MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]],MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]])#,
plot(MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[1]],MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[2]])#,
plot(MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[1]],MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[2]],
xlim=c(0,1000),ylim=c(0,1000),xlab="x",ylab="y")
plot(MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[1]],MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[2]],
xlim=c(0,200),ylim=c(0,200),xlab="x",ylab="y")
x <- metadata[metadata$CC==techrep[1],]$ID[1]
y <- metadata[metadata$CC==techrep[1],]$ID[2]
ggplot(MRcounts(data,norm=T),aes(x=x,y=y))+geom_point()+scale_y_log10()+scale_x_log10()
library(ggplot2)
ggplot(MRcounts(data,norm=T),aes(x=x,y=y))+geom_point()+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point()+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point()#+scale_y_log10()+scale_x_log10()
as.data.frame(MRcounts(data,norm=T))[1:5,1:5]
x
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x))+geom_point()#+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(y=y))+geom_point()#+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(y=y,x=1:length(MRcounts(data,norm=T)[1])))+geom_point()#+scale_y_log10()+scale_x_log10()
x <- MRcounts(data,norm=T)[metadata[metadata$CC==techrep[1],]$ID[1]]
y <- MRcounts(data,norm=T)[metadata[metadata$CC==techrep[1],]$ID[2]]
head(y)
x <- MRcounts(data,norm=T)[metadata[metadata$CC==techrep[1],]$ID[1]]
head(x)
x <- MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
y <- MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
head(x)
ggplot(aes(x=x,y=y)+geom_point()#+scale_y_log10()+scale_x_log10()
)
ggplot(aes(x=x,y=y))+geom_point()#+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point()#+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point()+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=0.5))+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=0.5,colour="blue"))+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=0.5,colour=qsec))+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=0.5,colour=x))+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=x,colour=x))+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=x/y,colour=x/y))+scale_y_log10()+scale_x_log10()
metadata[metadata$CC==techrep[1],]$ID[1]
metadata[metadata$CC==techrep[1],]
y <- MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- x/y
head(ratio)
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=ratio,colour=ratio))+scale_y_log10()+scale_x_log10()
plot(ratio)
density(ratio)
d <- densityplot(ratio)
d
d <- density(ratio)
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=ratio,colour=ratio))+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=1/20))+scale_y_log10()+scale_x_log10()
qqplot(x,y,plot=T)
qqplot(x,y,plot=T,xlim=c(0,200),ylim=c(0,200
))
qqnorm(x)
qqnorm(log2(x))
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
qqnorm(x)
summary(qqnorm(x))
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- x/y
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=1/20))+scale_y_log10()+scale_x_log10()
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=1/20))#+scale_y_log10()+scale_x_log10()
2^5
i=2
metadata[metadata$CC==techrep[i],]$ID[1]
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- x/y
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=1/20))#+scale_y_log10()+scale_x_log10()
i=3
metadata[metadata$CC==techrep[i],]$ID[1]
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=1/20))#+scale_y_log10()+scale_x_log10()
i=4
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=1/20))#+scale_y_log10()+scale_x_log10()
i=10
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ggplot(as.data.frame(MRcounts(data,norm=T)),aes(x=x,y=y))+geom_point(aes(alpha=1/20))#+scale_y_log10()+scale_x_log10()
2⁴
2^4
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- x/y
df <- data.frame(x=x,y=y,ratio=ratio)
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- x/y
df <- data.frame(x=x,y=y,ratio=ratio)
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))#+scale_y_log10()+scale_x_log10()
head(df)
plot(ratio)
plot(density(ratio))
plot(density(ratio,na.rm=T))
rm <- subset(df,df$ratio<0.5 & df$ratio>1.5)
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=rm))#+scale_y_log10()+scale_x_log10()
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+scale_color_manual("Status",values=rm)#+scale_y_log10()+scale_x_log10()
mycolours <- c("highlight" = "red", "normal" = "grey50")
rm <- unlist(lapply(df$ratio,function(x)if(x<0.5 | x>1.5){return("highlight")}else return("normal")))
rm <- unlist(lapply(df$ratio,function(x)if(x<0.5 | x>1.5){return("highlight")}else{return("normal")}))
rm <- unlist(lapply(df$ratio,function(x) if(x<0.5 | x>1.5){return("highlight")}else{return("normal")}))
rm <- unlist(lapply(df$ratio,function(x) if(x<0.5 | x>1.5){print("a")}))
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- x/y
df <- data.frame(x=x,y=y,ratio=ratio)
rm <- unlist(lapply(df$ratio,function(x) if(x<0.5 | x>1.5){print("a")}))
rm <- unlist(lapply(df$ratio,function(x) print(x)))
head(df)
head(df$ratio)
lapply(df$ratio,function(x) print(x))
rm <- unlist(lapply(df$ratio,function(x) print(x)))
df
ratio <- (x/y)+1
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
head(df)
ratio <- x/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
df
ratio <- (x+1)/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
df
ratio <- (x+0.001)/(y+0.001)
df <- data.frame(x=x,y=y,ratio=ratio)
df
plot(density(df$ratio,na.rm=T))
ratio <- (x+1)/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]+1
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]+1
ratio <- (x+1)/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]+1
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]+1
ratio <- (x)/(y)
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+scale_color_manual("Status",values=rm)#+scale_y_log10()+scale_x_log10()
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- (x+1)/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+scale_color_manual("Status",values=rm)#+scale_y_log10()+scale_x_log10()
rm <- unlist(lapply(df$ratio,function(x) print(x)))
summary(df$ratio)
sd(df$ratio)
rm <- unlist(lapply(df$ratio,function(x) if(x<x-sd(df$ratio) | x>x+sd(df$ratio))return("highlight")else return("normal"))))
rm <- unlist(lapply(df$ratio,function(x)
if(x<x-sd(df$ratio) | x>x+sd(df$ratio)){return("highlight")}else{return("normal")}))
head(rm)
df$rm <- unlist(lapply(df$ratio,function(x)
if(x<x-sd(df$ratio) | x>x+sd(df$ratio)){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey50")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+scale_color_manual("Status",values=rm)#+scale_y_log10()+scale_x_log10()
head(df)
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=rm))+scale_color_manual("Status",values=rm)#+scale_y_log10()+scale_x_log10()
mycolours <- c("highlight" = "red", "normal" = "grey50")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=rm))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$rm
as.factor(df$rm)
sd(df$ratio)
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<x-sd(df$ratio) | x>x+sd(df$ratio)){print(x);return("highlight")}else{return("normal")}))
unlist(lapply(df$ratio,function(x)
if(x<x-sd(df$ratio) | x>x+sd(df$ratio)){print(x)}))
unlist(lapply(df$ratio,function(x)
print(x-sd(df$ratio),x+sd(df$ratio));if(x<x-sd(df$ratio) | x>x+sd(df$ratio)){print(x)}))
unlist(lapply(df$ratio,function(x)
print(c(x-sd(df$ratio),x+sd(df$ratio)))))
unlist(lapply(df$ratio,function(x)
print(c(x,x-sd(df$ratio),x+sd(df$ratio)))))
unlist(lapply(df$ratio,function(x)
if(x<x-sd(df$ratio) | x>x+sd(df$ratio)){print(x)
unlist(lapply(df$ratio,function(x)
print(c(x,x-sd(df$ratio),x+sd(df$ratio)))))
mean(df$ratio)
mean(df$ratio)-sd(df$ratio)
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- (x+1)/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-sd(df$ratio) | x>mean(df$ratio)+sd(df$ratio)){print(x);return("highlight")}else{return("normal")}))
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-sd(df$ratio) | x>mean(df$ratio)+sd(df$ratio)){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey50")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(2*sd(df$ratio)) | x>mean(df$ratio)+(2*sd(df$ratio))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-sd(df$ratio) | x>mean(df$ratio)+(2*sd(df$ratio))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(1/sd(df$ratio)) | x>mean(df$ratio)+sd(df$ratio)){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(1/sd(df$ratio)) | x>mean(df$ratio)+(1/sd(df$ratio))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(sd(df$ratio/2)) | x>mean(df$ratio)+(sd(df$ratio/2))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(sd(df$ratio/2)) | x>mean(df$ratio)+(sd(df$ratio))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(sd(df$ratio)) | x>mean(df$ratio)+(sd(df$ratio))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
y <- MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- (x+1)/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(sd(df$ratio)) | x>mean(df$ratio)+(sd(df$ratio))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)+scale_y_log2()+scale_x_log2()
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)+scale_y_log10()+scale_x_log10()
ggplot(df,aes(x=x,y=y))+geom_point(aes(colour=highlight))+scale_color_manual("Status",values=mycolours)+scale_y_log10()+scale_x_log10()
y <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[1]]
x <- MRcounts(data,norm=T,log=T)[,metadata[metadata$CC==techrep[1],]$ID[2]]
ratio <- (x+1)/(y+1)
df <- data.frame(x=x,y=y,ratio=ratio)
plot(density(df$ratio,na.rm=T))
df$highlight <- unlist(lapply(df$ratio,function(x)
if(x<mean(df$ratio)-(sd(df$ratio)) | x>mean(df$ratio)+(sd(df$ratio))){return("highlight")}else{return("normal")}))
mycolours <- c("highlight" = "red", "normal" = "grey")
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20,colour=highlight))+scale_color_manual("Status",values=mycolours)#+scale_y_log10()+scale_x_log10()
df[with(df, order(-ratio)), ]
dd <- df[with(df, order(-ratio)), ]
head(dd)
dd <- dd[,-dd$ratio>1]
head(dd)
mean(df$ratio)-(sd(df$ratio))
dd <- dd[-dd$ratio>1,]
dd <- dd[-dd$ratio>1]
dd <- subset(dd,dd$ratio<1)
dd <- df[with(df, order(-ratio)), ]
dx <- subset(dd,dd$ratio<1)
head(dx)
dx <- subset(dd,dd$ratio==1)
head(dx)
dx <- subset(dd,dd$ratio!=1)
head(dx)
dx
dx <- subset(df,df$highlight=="highlight")
head(dx)
dx
z <- abs(dx$x-dx$y)
plot(density(z))
summary(z)
plot(z)
hist(z)
2^5.422
quantile(z,probs=0.9)
quantile(z,probs=0.95)
quantile(z,probs=0.90)
xyintercept <- quantile(z,probs=0.90)
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+geom_abline(yintercept=xyintercept)+geom_abline(xintercept=xyintercept)
xyintercept <- quantile(z,probs=0.90)
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+geom_hline(yintercept=xyintercept)+geom_abline(xintercept=xyintercept)
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+geom_hline(yintercept=xyintercept)+geom_abline(xintercept=xyintercept)
ggplot(df,aes(x=x,y=y))+geom_point(aes(alpha=1/20))+geom_hline(yintercept=xyintercept)+geom_vline(xintercept=xyintercept)
